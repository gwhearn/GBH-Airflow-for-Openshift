{{- if .Values.restore.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-restore
  namespace: {{ .Values.common.namespace }}
  labels:
    {{- include "airflow.labels" . | nindent 4 }}
    app.kubernetes.io/component: restore
spec:
  backoffLimit: 1
  template:
    metadata:
      labels:
        {{- include "airflow.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: restore
    spec:
      {{- with .Values.openshift.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: restore
          image: "{{ .Values.images.backup.repository }}:{{ .Values.images.backup.tag }}"
          imagePullPolicy: {{ .Values.images.backup.pullPolicy }}
          env:
            - name: PGHOST
              value: {{ .Values.postgresql.host | quote }}
            - name: PGPORT
              value: {{ .Values.postgresql.port | quote }}
            - name: PGDATABASE
              value: {{ .Values.postgresql.database | quote }}
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-airflow-secrets
                  key: postgresql-user
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-airflow-secrets
                  key: postgresql-password
            - name: BACKUP_FILE
              value: {{ .Values.restore.backupFile | quote }}
          command:
            - /bin/sh
            - -c
            - |
              if [ ! -f "/backup/${BACKUP_FILE}" ]; then
                echo "Backup file /backup/${BACKUP_FILE} not found"
                exit 1
              fi
              
              gunzip -c "/backup/${BACKUP_FILE}" | psql
          resources:
            {{- toYaml .Values.restore.resources | nindent 12 }}
          volumeMounts:
            - name: backup
              mountPath: /backup
      volumes:
        - name: backup
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-backup
      restartPolicy: Never
      {{- with .Values.restore.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.restore.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.restore.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }} 